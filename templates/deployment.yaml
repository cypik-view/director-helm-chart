apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-view-director
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-view-director
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-view-director
    spec:
      containers:
          - name: view-director
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            ports:
              - containerPort: 8511
            env:
              - name: VIEW_CONFIG
                value: /app/config/view.json
              - name: VIEW_ACCOUNT_GUID
                value: '{{ .Values.env.VIEW_ACCOUNT_GUID }}'
              - name: VIEW_DATABASE_TYPE
                value: '{{ .Values.env.VIEW_DATABASE_TYPE }}'
              - name: VIEW_DATABASE_FILE
                value: '{{ .Values.env.VIEW_DATABASE_FILE }}'
              - name: VIEW_DATABASE_HOST
                value: '{{ .Values.env.VIEW_DATABASE_HOST }}'
              - name: VIEW_DATABASE_PORT
                value: '{{ .Values.env.VIEW_DATABASE_PORT }}'
              - name: VIEW_DATABASE_NAME
                value: '{{ .Values.env.VIEW_DATABASE_NAME }}'
              - name: VIEW_DATABASE_USER
                value: '{{ .Values.env.VIEW_DATABASE_USER }}'
              - name: VIEW_DATABASE_PASS
                value: '{{ .Values.env.VIEW_DATABASE_PASS }}'
              - name: VIEW_CONSOLE_LOGGING
                value: '{{ .Values.env.VIEW_CONSOLE_LOGGING }}'
              - name: VIEW_CONTROL_HOSTNAME
                value: '{{ .Values.env.VIEW_CONTROL_HOSTNAME }}'
              - name: VIEW_CONTROL_PORT
                value: '{{ .Values.env.VIEW_CONTROL_PORT }}'
              - name: VIEW_CONTROL_SSL
                value: '{{ .Values.env.VIEW_CONTROL_SSL }}'
              - name: VIEW_CONTROL_SWVERSION
                value: '{{ .Values.env.VIEW_CONTROL_SWVERSION }}'
              - name: TERM
                value: '{{ .Values.env.TERM }}'
            volumeMounts:
              - name: config
                mountPath: /app/config
              - name: shared-storage
                mountPath: /app/assets
                subPath: assets
              - name: shared-storage
                mountPath: /app/blobs
                subPath: blobs
              - name: shared-storage
                mountPath: /app/logs
                subPath: logs
              - name: shared-storage
                mountPath: /app/webhookreq
                subPath: webhookreq
              - name: shared-storage
                mountPath: /app/webhookresp
                subPath: webhookresp
              - name: shared-storage
                mountPath: /app/controllog
                subPath: controllog
              - name: shared-storage
                mountPath: /app/controlapi
                subPath: controlapi
              - name: shared-storage
                mountPath: /app/controltoken
                subPath: controltoken
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-view-director-config
            items:
                - key: view.json
                  path: view.json
        - name: shared-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-view-director-pvc